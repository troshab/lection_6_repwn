# ========================================
# RE/PWN CTF - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è (PowerShell wrapper)
# ========================================
# –ó–∞–ø—É—Å–∫–∞—î test_all.sh –≤ WSL Ubuntu —Ç–∞ –ø–æ–∫–∞–∑—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏

param(
    [switch]$Verbose
)

# –ö–æ–ª—å–æ—Ä–∏
function Write-Header {
    param([string]$Message)
    Write-Host "========================================" -ForegroundColor Cyan
    Write-Host $Message -ForegroundColor Cyan
    Write-Host "========================================" -ForegroundColor Cyan
}

function Write-Success {
    param([string]$Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-Info {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor Blue
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

# ========================================
# –ü–æ—á–∞—Ç–æ–∫
# ========================================

Write-Header "RE/PWN CTF - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"
Write-Host ""

# ========================================
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ WSL
# ========================================

Write-Info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ WSL..."

try {
    $wslVersion = wsl --version 2>$null
    if ($LASTEXITCODE -ne 0) {
        Write-Error "WSL –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        Write-Host ""
        Write-Info "–°–ø–æ—á–∞—Ç–∫—É –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å WSL:"
        Write-Info "  1. –ó–∞–ø—É—Å—Ç—ñ—Ç—å setup_windows.ps1"
        Write-Info "  2. –ê–±–æ –≤—Ä—É—á–Ω—É: wsl --install"
        Write-Host ""
        Read-Host "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –≤–∏—Ö–æ–¥—É"
        exit 1
    }
    Write-Success "WSL –∑–Ω–∞–π–¥–µ–Ω–æ"
} catch {
    Write-Error "–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ WSL: $_"
    exit 1
}

Write-Host ""

# ========================================
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Ubuntu
# ========================================

Write-Info "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Ubuntu..."

try {
    $distributions = wsl --list --quiet 2>$null
    if ($distributions -match "Ubuntu") {
        Write-Success "Ubuntu –∑–Ω–∞–π–¥–µ–Ω–æ"
    } else {
        Write-Error "Ubuntu –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ WSL"
        Write-Host ""
        Write-Info "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Ubuntu —á–µ—Ä–µ–∑:"
        Write-Info "  1. setup_windows.ps1"
        Write-Info "  2. Microsoft Store: Ubuntu 22.04"
        Write-Host ""
        Read-Host "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –≤–∏—Ö–æ–¥—É"
        exit 1
    }
} catch {
    Write-Error "–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Ubuntu: $_"
    exit 1
}

Write-Host ""

# ========================================
# –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —à–ª—è—Ö—É
# ========================================

$scriptPath = $PSScriptRoot
$wslPath = $scriptPath -replace '^([A-Z]):', '/mnt/$1' -replace '\\', '/'
$wslPath = $wslPath.ToLower()

Write-Info "–®–ª—è—Ö –ø—Ä–æ—î–∫—Ç—É: $scriptPath"
Write-Info "WSL —à–ª—è—Ö: $wslPath"
Write-Host ""

# ========================================
# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
# ========================================

Write-Header "–ó–∞–ø—É—Å–∫ test_all.sh –≤ WSL"
Write-Host ""

# –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥–∏
$testCommand = @"
cd '$wslPath'
chmod +x test_all.sh
./test_all.sh
"@

if ($Verbose) {
    Write-Info "–ö–æ–º–∞–Ω–¥–∞:"
    Write-Host $testCommand -ForegroundColor DarkGray
    Write-Host ""
}

# –ó–∞–ø—É—Å–∫
try {
    wsl bash -c $testCommand
    $testResult = $LASTEXITCODE

    Write-Host ""
    Write-Header "–†–µ–∑—É–ª—å—Ç–∞—Ç"

    if ($testResult -eq 0) {
        Write-Success "–í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ! üéâ"
        Write-Host ""
        Write-Info "–ü—Ä–æ—î–∫—Ç –ø–æ–≤–Ω—ñ—Å—Ç—é –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"
    } elseif ($testResult -eq 1) {
        Write-Host "[WARNING] –î–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ" -ForegroundColor Yellow
        Write-Host ""
        Write-Info "–ë—ñ–ª—å—à—ñ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –ø—Ä–∞—Ü—é—î, –∞–ª–µ —î –¥–µ—è–∫—ñ –ø—Ä–æ–±–ª–µ–º–∏"
        Write-Info "–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –≤–∏–≤—ñ–¥ –≤–∏—â–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
    } else {
        Write-Error "–ë–∞–≥–∞—Ç–æ —Ç–µ—Å—Ç—ñ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ"
        Write-Host ""
        Write-Info "–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è:"
        Write-Info "  1. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ setup_windows.ps1 –∑–Ω–æ–≤—É"
        Write-Info "  2. –ê–±–æ –≤ WSL: ./setup_linux.sh"
    }

    Write-Host ""

    if ($testResult -eq 0) {
        Write-Info "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:"
        Write-Host "  1. RE –∑–∞–≤–¥–∞–Ω–Ω—è: wsl" -ForegroundColor White
        Write-Host "     cd $wslPath/re/task01_inventory" -ForegroundColor DarkGray
        Write-Host "     make && ./build/re101" -ForegroundColor DarkGray
        Write-Host ""
        Write-Host "  2. PWN –∑–∞–≤–¥–∞–Ω–Ω—è: wsl" -ForegroundColor White
        Write-Host "     cd $wslPath/pwn" -ForegroundColor DarkGray
        Write-Host "     docker compose up -d" -ForegroundColor DarkGray
        Write-Host ""
        Write-Host "  3. VS Code: code ." -ForegroundColor White
        Write-Host "     (–≤—ñ–¥–∫—Ä–∏—î –≤ WSL —Ä–µ–∂–∏–º—ñ)" -ForegroundColor DarkGray
    }

    Write-Host ""
    exit $testResult

} catch {
    Write-Error "–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: $_"
    Write-Host ""
    Write-Info "–°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Ä—É—á–Ω—É:"
    Write-Info "  wsl"
    Write-Info "  cd $wslPath"
    Write-Info "  ./test_all.sh"
    Write-Host ""
    exit 1
}
